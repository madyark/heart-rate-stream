version: 2

models:
  - name: dim_dates
    description: Dimension table for dates data (grain in days)
    tests:
      - dbt_expectations.expect_row_values_to_have_data_for_every_n_datepart:
          date_col: date_day
          date_part: day
          test_start_date: '1900-01-01'
          test_end_date: '2099-12-31' 
      - dbt_expectations.expect_table_row_count_to_equal:
          value: 73049
      - dbt_expectations.expect_table_columns_to_contain_set:
          column_list: ["date_day", "day_of_week", "day_of_week_name", "day_of_month", "day_of_year", "week_of_year", "month_of_year", "month_name", "year_number"]
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: week_end_date
          column_B: week_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: prior_year_week_end_date
          column_B: prior_year_week_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: week_start_date
          column_B: prior_year_week_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: iso_week_end_date
          column_B: iso_week_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: prior_year_iso_week_end_date
          column_B: prior_year_iso_week_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: iso_week_start_date
          column_B: prior_year_iso_week_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: month_end_date
          column_B: month_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: prior_year_month_end_date
          column_B: prior_year_month_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: quarter_end_date
          column_B: quarter_start_date
          or_equal: false
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: year_end_date
          column_B: year_start_date
          or_equal: false
    columns:
      - name: date_day
        description: Date of the day
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True #  the regex pattern is a "raw" string and should be escaped
      - name: prior_date_day
        description: Prior date of the day
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
          - date_difference_consistent:
              date_part: day
              difference_value: -1
              base_date_column: date_day
      - name: next_date_day
        description: Next date of the day
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
          - date_difference_consistent:
              date_part: day
              difference_value: 1
              base_date_column: date_day
      - name: prior_year_date_day
        description: Prior year date of the day
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
          - date_difference_consistent:
              date_part: year
              difference_value: -1
              base_date_column: date_day
      - name: prior_year_over_year_date_day
        description: Prior year over year date of the day
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: day_of_week
        description: Day of the week (Sunday=1, Monday=2, ..., Saturday=7)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 7
      - name: day_of_week_iso
        description: ISO day of the week (Monday=1, Tuesday=2, ..., Sunday=7)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 7
      - name: day_of_week_name
        description: Name of the day of the week (Sunday, Monday, ..., Saturday)
        tests:
          - not_null
          - accepted_values:
              values: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
      - name: day_of_week_name_short
        description: Short name of the day of the week (Sun, Mon, ..., Sat)
        tests:
          - not_null
          - accepted_values:
              values: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
      - name: day_of_month
        description: Day of the month
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 31
      - name: day_of_year
        description: Day of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 366
      - name: week_start_date
        description: Start date of the week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: week_end_date
        description: End date of the week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: prior_year_week_start_date
        description: Prior year start date of the week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: prior_year_week_end_date
        description: Prior year end date of the week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: week_of_year
        description: Week of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 53
      - name: iso_week_start_date
        description: Start date of the ISO week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: iso_week_end_date
        description: End date of the ISO week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: prior_year_iso_week_start_date
        description: Prior year start date of the ISO week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: prior_year_iso_week_end_date
        description: Prior year end date of the ISO week
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: iso_week_of_year
        description: ISO week of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 53
      - name: prior_year_week_of_year
        description: Prior year week of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 53
      - name: prior_year_iso_week_of_year
        description: Prior year ISO week of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 53
      - name: month_of_year
        description: Month of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 12
      - name: month_name
        description: Name of the month
        tests:
          - not_null
          - accepted_values:
              values: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
      - name: month_name_short
        description: Short name of the month
        tests:
          - not_null
          - accepted_values:
              values: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
      - name: month_start_date
        description: Start date of the month
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-01'
              is_raw: True 
      - name: month_end_date
        description: End date of the month
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: prior_year_month_start_date
        description: Prior year start date of the month
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-01'
              is_raw: True 
          - date_difference_consistent:
              date_part: year
              difference_value: -1
              base_date_column: month_start_date
      - name: prior_year_month_end_date
        description: Prior year end date of the month
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: quarter_of_year
        description: Quarter of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 4
      - name: quarter_start_date
        description: Start date of the quarter
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-01'
              is_raw: True 
      - name: quarter_end_date
        description: End date of the quarter
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-\d\d-\d\d'
              is_raw: True 
      - name: year_number
        description: Year number
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1900
              max_value: 2099
      - name: year_start_date
        description: Start date of the year
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-01-01'
              is_raw: True 
      - name: year_end_date
        description: End date of the year 
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d\d\d-12-31'
              is_raw: True 
  
  - name: dim_times
    description: Dimension table for times data (grain in seconds)
    tests:
      - dbt_expectations.expect_table_row_count_to_equal:
          value: 86400 
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: ["hh_mm_ss", "hour", "minute", "second", "time_of_day"]
    columns:
      - name: hh_mm_ss
        description: Time in the format HH:MM:SS
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '\d\d:\d\d:\d\d'
              is_raw: True 
      - name: hour
        description: Hour component of the time
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 23
      - name: minute
        description: Minute component of the time
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 59
      - name: second
        description: Second component of the time
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 59
      - name: time_of_day
        description: Time of day classifier (Morning, Afternoon, Evening, Night)
        tests:
          - not_null
          - accepted_values:
              values: ["Morning", "Afternoon", "Evening", "Night"]

  - name: dim_users
    description: Type 2 Slowly-Changing Dimension table for users data
    tests:
      - correct_scd_start_end_dates:
          id_column: user_id
          start_date_column: start_date
          end_date_column: end_date
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: ["user_key", "user_id", "first_name", "last_name", "date_of_birth", "sex", "height", "weight", "blood_type", "race", "origin_country", "address", "address_country", "start_date", "end_date"]
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: end_date
          column_B: start_date
          or_equal: False
    columns:
      - name: user_key
        description: Surrogate key of the users dimension table
        tests:
          - unique
          - not_null
      - name: user_id
        description: Business key to uniquely identify the user in the operational system
        tests:
          - not_null 
      - name: first_name
        description: User first name 
        tests:
          - not_null 
      - name: last_name
        description: User last name 
        tests:
          - not_null 
      - name: date_of_birth
        description: User date of birth
        tests:
          - not_null 
      - name: sex
        description: User sex 
      - name: height
        description: User height 
      - name: weight
        description: User weight 
      - name: blood_type
        description: User blood type 
      - name: race
        description: User race 
      - name: origin_country
        description: Name of the country of origin for the user
      - name: address
        description: User address 
        tests:
          - not_null 
      - name: address_country
        description: Name of the country where the user lives
        tests:
          - not_null 
      - name: start_date
        description: Date from which record row is effective
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: start_date 
              group_by: [user_id]
      - name: end_date
        description: Date until which record row is effective
        tests:
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: end_date 
              group_by: [user_id]
              row_condition: "end_date is not null" 
    config:
      meta:
        dagster:
          auto_materialize_policy:
            type: eager

  - name: dim_activities
    description: Type 2 Slowly-Changing Dimension table for activity names data
    tests:
      - correct_scd_start_end_dates:
          id_column: activity_id
          start_date_column: start_date
          end_date_column: end_date
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: ["activity_key", "activity_id", "activity_name", "start_date", "end_date"]
      - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
          column_A: end_date
          column_B: start_date
          or_equal: False
    columns:
      - name: activity_key
        description: Surrogate key of the activities dimension table
        tests:
          - unique
          - not_null
      - name: activity_id
        description: Business key to uniquely identify the activity in the operational system
        tests:
          - not_null
      - name: activity_name
        description: Name of the activity
        tests:
          - not_null
      - name: start_date
        description: Date from which record row is effective
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: start_date 
              group_by: [activity_id]
      - name: end_date
        description: Date until which record row is effective
        tests:
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: end_date 
              group_by: [activity_id]
              row_condition: "end_date is not null" 
    config:
      meta:
        dagster:
          auto_materialize_policy:
            type: eager

  - name: fct_heart_rates
    description: Transaction fact table for heart rate data
    tests:
      - unique:
          column_name: "(user_key || '-' || activity_key || '-' || event_datetime)"
      - dbt_expectations.expect_table_columns_to_match_set:
          column_list: ["user_key", "activity_key", "event_date", "event_time", "event_datetime", "heart_rate", "previous_heart_rate", "max_heart_rate", "min_heart_rate", "avg_heart_rate", "latitude", "longitude"]
    columns:
      - name: user_key
        description: Unique surrogate key for the user
        tests:
          - not_null 
          - relationships:
              to: ref('dim_users')
              field: user_key
      - name: activity_key
        description: Unique surrogate key for the activity name
        tests:
          - not_null 
          - relationships:
              to: ref('dim_activities')
              field: activity_key
      - name: event_date
        description: Calendar date of the event
        tests:
          - not_null 
          - relationships:
              to: ref('dim_dates')
              field: date_day
      - name: event_time
        description: Time of the event
        tests:
          - not_null 
          - relationships:
              to: ref('dim_times')
              field: hh_mm_ss
      - name: event_datetime
        description: Datetime of the event
        tests:
          - not_null 
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '[0-9]{4}-[0-9]{2}-[0-9]{2}\s\d\d:\d\d:\d\d\.\d\d\d'
              is_raw: True 
      - name: heart_rate
        description: Heart rate recorded during the event
      - name: previous_heart_rate
        description: Previous heart rate recorded for the user during the given exercise
      - name: max_heart_rate
        description: Maximum heart rate recorded for the user during the given exercise
      - name: min_heart_rate
        description: Minimum heart rate recorded for the user during the given exercise
      - name: avg_heart_rate
        description: Average heart rate recorded for the user during the given exercise
      - name: latitude
        description: Latitude of the event location
      - name: longitude
        description: Longitude of the event location
    config:
      meta:
        dagster:
          auto_materialize_policy:
            type: eager